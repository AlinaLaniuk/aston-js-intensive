// Какие бывают алгоритмы сортировок?

// Алгоритмов сортировки достаточно много. Перечислю несколько самых популярных. И без кода, при необходимости можно найти в интернетике



// - пузырьковая

// Простой перебор элементов массива, при котором каждый элемент сравнивается с соседним справа. Если сравниваемый элемент больше, он меняется местами с соседом.
// Меньше - остается на месте. Выглядит это так, будто элементы поднимаются вверх, как пузырьки.

// сложность - квадратичная (цикл вложен в цикл, при этом количество итераций в циклах одинаково и равно длине массива)


// - сортировка выбором

// Итерируемся по массиву, в неотсортированной части массива выбираем наименьшее значение и ставим в начало это неотсортированной части.

// сложность - квадратичная (цикл вложен в цикл, при этом количество итераций в циклах одинаково и равно длине массива)


// - быстрая сортировка

// Выбирается опорный элемент. Сравнение происходит именно с ним. После сравнения определяются три отрезка - равные опоре элементы, большие и меньшие.
// Отрезки с большими и меньшими элементами обрабатываются рекурсивно по той же схеме.

// сложность - O(n * log n), в худшем - O(n2).


// - сортировка слиянием

// Массив бъется на две части, потом каждый бьется еще на две, потом еще и еще, пока не образуется ряд крошек-подмассивов, в каждом из которых сидит по одному элементу.
// Дальше массивы объединяются по два элемента, сортируются, объединяются. И начинается все с начала с каждым подмассивом: разбить до малышей, объединить, отсортировать.

// сложность - O(n * log n)

// - сортировка вставками

// Простая аналогия для запоминания прицнипа этой сортировки - сортировка купюр в кошельке, когда из набора разных бумажек мы формируем стопочку с номиналами по возрастанию. 
// В этом алгоритме в рамках цикла нужно взять эелемнт, найти его место в массиве и вставить.

// сложность - O(N), в худшем - O(N^2)

// https://www.bigocheatsheet.com/ - вот тут хорошая напоминалка по сложностям алоритмов
